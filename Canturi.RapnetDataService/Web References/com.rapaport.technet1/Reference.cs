//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Canturi.RapnetDataService.com.rapaport.technet1 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FeedSoap", Namespace="http://technet.rapaport.com/")]
    public partial class Feed : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenticationTicketHeader authenticationTicketHeaderValueField;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiamondsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleDiamondOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Feed() {
            this.Url = global::Canturi.RapnetDataService.Properties.Settings.Default.Canturi_RapnetDataService_com_rapaport_technet1_Feed;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenticationTicketHeader AuthenticationTicketHeaderValue {
            get {
                return this.authenticationTicketHeaderValueField;
            }
            set {
                this.authenticationTicketHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetDiamondsCompletedEventHandler GetDiamondsCompleted;
        
        /// <remarks/>
        public event GetSingleDiamondCompletedEventHandler GetSingleDiamondCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTicketHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://technet.rapaport.com/Login", RequestNamespace="http://technet.rapaport.com/", ResponseNamespace="http://technet.rapaport.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Login(string Username, string Password) {
            this.Invoke("Login", new object[] {
                        Username,
                        Password});
        }
        
        /// <remarks/>
        public void LoginAsync(string Username, string Password) {
            this.LoginAsync(Username, Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string Username, string Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        Username,
                        Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTicketHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://technet.rapaport.com/GetDiamonds", RequestNamespace="http://technet.rapaport.com/", ResponseNamespace="http://technet.rapaport.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDiamonds(FeedParameters SearchParams, ref int DiamondsFound) {
            object[] results = this.Invoke("GetDiamonds", new object[] {
                        SearchParams,
                        DiamondsFound});
            DiamondsFound = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiamondsAsync(FeedParameters SearchParams, int DiamondsFound) {
            this.GetDiamondsAsync(SearchParams, DiamondsFound, null);
        }
        
        /// <remarks/>
        public void GetDiamondsAsync(FeedParameters SearchParams, int DiamondsFound, object userState) {
            if ((this.GetDiamondsOperationCompleted == null)) {
                this.GetDiamondsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiamondsOperationCompleted);
            }
            this.InvokeAsync("GetDiamonds", new object[] {
                        SearchParams,
                        DiamondsFound}, this.GetDiamondsOperationCompleted, userState);
        }
        
        private void OnGetDiamondsOperationCompleted(object arg) {
            if ((this.GetDiamondsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiamondsCompleted(this, new GetDiamondsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationTicketHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://technet.rapaport.com/GetSingleDiamond", RequestNamespace="http://technet.rapaport.com/", ResponseNamespace="http://technet.rapaport.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSingleDiamond(int DiamondID) {
            object[] results = this.Invoke("GetSingleDiamond", new object[] {
                        DiamondID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleDiamondAsync(int DiamondID) {
            this.GetSingleDiamondAsync(DiamondID, null);
        }
        
        /// <remarks/>
        public void GetSingleDiamondAsync(int DiamondID, object userState) {
            if ((this.GetSingleDiamondOperationCompleted == null)) {
                this.GetSingleDiamondOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleDiamondOperationCompleted);
            }
            this.InvokeAsync("GetSingleDiamond", new object[] {
                        DiamondID}, this.GetSingleDiamondOperationCompleted, userState);
        }
        
        private void OnGetSingleDiamondOperationCompleted(object arg) {
            if ((this.GetSingleDiamondCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleDiamondCompleted(this, new GetSingleDiamondCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://technet.rapaport.com/", IsNullable=false)]
    public partial class AuthenticationTicketHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string ticketField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public partial class FeedParameters {
        
        private Shapes[] shapeCollectionField;
        
        private Labs[] labCollectionField;
        
        private FluorescenceColors[] fluorescenceColorsCollectionField;
        
        private FluorescenceIntensities[] fluorescenceIntensityCollectionField;
        
        private CuletSizes[] culetSizesCollectionField;
        
        private FancyColors[] fancyColorCollectionField;
        
        private System.Nullable<Colors> colorFromField;
        
        private System.Nullable<Colors> colorToField;
        
        private System.Nullable<SearchTypes> searchTypeField;
        
        private System.Nullable<FancyColorIntensities> fancyColorIntensityFromField;
        
        private System.Nullable<FancyColorIntensities> fancyColorIntensityToField;
        
        private System.Nullable<Clarities> clarityFromField;
        
        private System.Nullable<Clarities> clarityToField;
        
        private System.Nullable<Cuts> cutFromField;
        
        private System.Nullable<Cuts> cutToField;
        
        private System.Nullable<Polishes> polishFromField;
        
        private System.Nullable<Polishes> polishToField;
        
        private System.Nullable<Symmetries> symmetryFromField;
        
        private System.Nullable<Symmetries> symmetryToField;
        
        private int pageNumberField;
        
        private int pageSizeField;
        
        private System.Nullable<GirdleSizes> girdleSizeMinField;
        
        private System.Nullable<GirdleSizes> girdleSizeMaxField;
        
        private System.Nullable<decimal> sizeFromField;
        
        private System.Nullable<decimal> sizeToField;
        
        private System.Nullable<decimal> priceFromField;
        
        private System.Nullable<decimal> priceToField;
        
        private System.Nullable<decimal> depthPercentFromField;
        
        private System.Nullable<decimal> depthPercentToField;
        
        private System.Nullable<decimal> tablePercentFromField;
        
        private System.Nullable<decimal> tablePercentToField;
        
        private System.Nullable<decimal> measLengthFromField;
        
        private System.Nullable<decimal> measLengthToField;
        
        private System.Nullable<decimal> measWidthFromField;
        
        private System.Nullable<decimal> measWidthToField;
        
        private System.Nullable<decimal> measDepthFromField;
        
        private System.Nullable<decimal> measDepthToField;
        
        private SortDirections sortDirectionField;
        
        private SortByField sortByField;
        
        /// <remarks/>
        public Shapes[] ShapeCollection {
            get {
                return this.shapeCollectionField;
            }
            set {
                this.shapeCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Labs[] LabCollection {
            get {
                return this.labCollectionField;
            }
            set {
                this.labCollectionField = value;
            }
        }
        
        /// <remarks/>
        public FluorescenceColors[] FluorescenceColorsCollection {
            get {
                return this.fluorescenceColorsCollectionField;
            }
            set {
                this.fluorescenceColorsCollectionField = value;
            }
        }
        
        /// <remarks/>
        public FluorescenceIntensities[] FluorescenceIntensityCollection {
            get {
                return this.fluorescenceIntensityCollectionField;
            }
            set {
                this.fluorescenceIntensityCollectionField = value;
            }
        }
        
        /// <remarks/>
        public CuletSizes[] CuletSizesCollection {
            get {
                return this.culetSizesCollectionField;
            }
            set {
                this.culetSizesCollectionField = value;
            }
        }
        
        /// <remarks/>
        public FancyColors[] FancyColorCollection {
            get {
                return this.fancyColorCollectionField;
            }
            set {
                this.fancyColorCollectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Colors> ColorFrom {
            get {
                return this.colorFromField;
            }
            set {
                this.colorFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Colors> ColorTo {
            get {
                return this.colorToField;
            }
            set {
                this.colorToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SearchTypes> SearchType {
            get {
                return this.searchTypeField;
            }
            set {
                this.searchTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<FancyColorIntensities> FancyColorIntensityFrom {
            get {
                return this.fancyColorIntensityFromField;
            }
            set {
                this.fancyColorIntensityFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<FancyColorIntensities> FancyColorIntensityTo {
            get {
                return this.fancyColorIntensityToField;
            }
            set {
                this.fancyColorIntensityToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Clarities> ClarityFrom {
            get {
                return this.clarityFromField;
            }
            set {
                this.clarityFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Clarities> ClarityTo {
            get {
                return this.clarityToField;
            }
            set {
                this.clarityToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Cuts> CutFrom {
            get {
                return this.cutFromField;
            }
            set {
                this.cutFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Cuts> CutTo {
            get {
                return this.cutToField;
            }
            set {
                this.cutToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Polishes> PolishFrom {
            get {
                return this.polishFromField;
            }
            set {
                this.polishFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Polishes> PolishTo {
            get {
                return this.polishToField;
            }
            set {
                this.polishToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Symmetries> SymmetryFrom {
            get {
                return this.symmetryFromField;
            }
            set {
                this.symmetryFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Symmetries> SymmetryTo {
            get {
                return this.symmetryToField;
            }
            set {
                this.symmetryToField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GirdleSizes> GirdleSizeMin {
            get {
                return this.girdleSizeMinField;
            }
            set {
                this.girdleSizeMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<GirdleSizes> GirdleSizeMax {
            get {
                return this.girdleSizeMaxField;
            }
            set {
                this.girdleSizeMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SizeFrom {
            get {
                return this.sizeFromField;
            }
            set {
                this.sizeFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SizeTo {
            get {
                return this.sizeToField;
            }
            set {
                this.sizeToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> PriceFrom {
            get {
                return this.priceFromField;
            }
            set {
                this.priceFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> PriceTo {
            get {
                return this.priceToField;
            }
            set {
                this.priceToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> DepthPercentFrom {
            get {
                return this.depthPercentFromField;
            }
            set {
                this.depthPercentFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> DepthPercentTo {
            get {
                return this.depthPercentToField;
            }
            set {
                this.depthPercentToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TablePercentFrom {
            get {
                return this.tablePercentFromField;
            }
            set {
                this.tablePercentFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TablePercentTo {
            get {
                return this.tablePercentToField;
            }
            set {
                this.tablePercentToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MeasLengthFrom {
            get {
                return this.measLengthFromField;
            }
            set {
                this.measLengthFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MeasLengthTo {
            get {
                return this.measLengthToField;
            }
            set {
                this.measLengthToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MeasWidthFrom {
            get {
                return this.measWidthFromField;
            }
            set {
                this.measWidthFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MeasWidthTo {
            get {
                return this.measWidthToField;
            }
            set {
                this.measWidthToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MeasDepthFrom {
            get {
                return this.measDepthFromField;
            }
            set {
                this.measDepthFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MeasDepthTo {
            get {
                return this.measDepthToField;
            }
            set {
                this.measDepthToField = value;
            }
        }
        
        /// <remarks/>
        public SortDirections SortDirection {
            get {
                return this.sortDirectionField;
            }
            set {
                this.sortDirectionField = value;
            }
        }
        
        /// <remarks/>
        public SortByField SortBy {
            get {
                return this.sortByField;
            }
            set {
                this.sortByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum Shapes {
        
        /// <remarks/>
        ROUND,
        
        /// <remarks/>
        PEAR,
        
        /// <remarks/>
        PRINCESS,
        
        /// <remarks/>
        MARQUISE,
        
        /// <remarks/>
        OVAL,
        
        /// <remarks/>
        RADIANT,
        
        /// <remarks/>
        EMERALD,
        
        /// <remarks/>
        HEART,
        
        /// <remarks/>
        CUSHION,
        
        /// <remarks/>
        ASSCHER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum Labs {
        
        /// <remarks/>
        GIA,
        
        /// <remarks/>
        IGI,
        
        /// <remarks/>
        AGS,
        
        /// <remarks/>
        HRD,
        
        /// <remarks/>
        EGL_USA,
        
        /// <remarks/>
        EGL_ISRAEL,
        
        /// <remarks/>
        EGL_SOUTH_AFRICA,
        
        /// <remarks/>
        EGL_PRECERT,
        
        /// <remarks/>
        EGL_PLATINUM,
        
        /// <remarks/>
        EGL_HK,
        
        /// <remarks/>
        CGL,
        
        /// <remarks/>
        NONE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum FluorescenceColors {
        
        /// <remarks/>
        BLUE,
        
        /// <remarks/>
        YELLOW,
        
        /// <remarks/>
        GREEN,
        
        /// <remarks/>
        RED,
        
        /// <remarks/>
        ORANGE,
        
        /// <remarks/>
        WHITE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum FluorescenceIntensities {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        VERY_SLIGHT,
        
        /// <remarks/>
        FAINT,
        
        /// <remarks/>
        MEDIUM,
        
        /// <remarks/>
        SLIGHT,
        
        /// <remarks/>
        STRONG,
        
        /// <remarks/>
        VERY_STRONG,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum CuletSizes {
        
        /// <remarks/>
        VERY_SMALL,
        
        /// <remarks/>
        SMALL,
        
        /// <remarks/>
        MEDIUM,
        
        /// <remarks/>
        LARGE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum FancyColors {
        
        /// <remarks/>
        YELLOW,
        
        /// <remarks/>
        PINK,
        
        /// <remarks/>
        BROWN,
        
        /// <remarks/>
        GREEN,
        
        /// <remarks/>
        BLACK,
        
        /// <remarks/>
        BLUE,
        
        /// <remarks/>
        ORANGE,
        
        /// <remarks/>
        GRAY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum Colors {
        
        /// <remarks/>
        D,
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        G,
        
        /// <remarks/>
        H,
        
        /// <remarks/>
        I,
        
        /// <remarks/>
        J,
        
        /// <remarks/>
        K,
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        M,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum SearchTypes {
        
        /// <remarks/>
        WHITE,
        
        /// <remarks/>
        FANCY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum FancyColorIntensities {
        
        /// <remarks/>
        FAINT,
        
        /// <remarks/>
        VERY_LIGHT,
        
        /// <remarks/>
        LIGHT,
        
        /// <remarks/>
        FANCY_LIGHT,
        
        /// <remarks/>
        FANCY,
        
        /// <remarks/>
        FANCY_DARK,
        
        /// <remarks/>
        FANCY_INTENSE,
        
        /// <remarks/>
        FANCY_VIVID,
        
        /// <remarks/>
        FANCY_DEEP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum Clarities {
        
        /// <remarks/>
        IF,
        
        /// <remarks/>
        VVS1,
        
        /// <remarks/>
        VVS2,
        
        /// <remarks/>
        VS1,
        
        /// <remarks/>
        VS2,
        
        /// <remarks/>
        SI1,
        
        /// <remarks/>
        SI2,
        
        /// <remarks/>
        SI3,
        
        /// <remarks/>
        I1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum Cuts {
        
        /// <remarks/>
        EXCELLENT,
        
        /// <remarks/>
        VERY_GOOD,
        
        /// <remarks/>
        GOOD,
        
        /// <remarks/>
        FAIR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum Polishes {
        
        /// <remarks/>
        Excellent,
        
        /// <remarks/>
        Very_Good,
        
        /// <remarks/>
        Good,
        
        /// <remarks/>
        Fair,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum Symmetries {
        
        /// <remarks/>
        Excellent,
        
        /// <remarks/>
        Very_Good,
        
        /// <remarks/>
        Good,
        
        /// <remarks/>
        Fair,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum GirdleSizes {
        
        /// <remarks/>
        EXTR_THIN,
        
        /// <remarks/>
        VERY_THIN,
        
        /// <remarks/>
        THIN,
        
        /// <remarks/>
        SLIGHTLY_THIN,
        
        /// <remarks/>
        MEDIUM,
        
        /// <remarks/>
        SLIGHTLY_THICK,
        
        /// <remarks/>
        THICK,
        
        /// <remarks/>
        VERY_THICK,
        
        /// <remarks/>
        EXTR_THICK,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum SortDirections {
        
        /// <remarks/>
        ASC,
        
        /// <remarks/>
        DESC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://technet.rapaport.com/")]
    public enum SortByField {
        
        /// <remarks/>
        PRICE,
        
        /// <remarks/>
        SHAPE,
        
        /// <remarks/>
        SIZE,
        
        /// <remarks/>
        COLOR,
        
        /// <remarks/>
        CLARITY,
        
        /// <remarks/>
        CUT,
        
        /// <remarks/>
        LAB,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDiamondsCompletedEventHandler(object sender, GetDiamondsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiamondsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiamondsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int DiamondsFound {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSingleDiamondCompletedEventHandler(object sender, GetSingleDiamondCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleDiamondCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleDiamondCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591